# H2 file-based production profile
utility.database.type=h2

# H2 specific settings (use DB_CLOSE_DELAY=-1 for stability on modern H2)
h2.datasource.url=jdbc:h2:file:./data/utilitydb;DB_CLOSE_DELAY=-1
h2.datasource.username=sa
h2.datasource.password=
h2.datasource.driver-class-name=org.h2.Driver

# JPA/Hibernate settings for H2
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.h2.console.enabled=false

# JWT Configuration
app.jwt.secret=yourSecretKeyHereMustBeAtLeast32CharactersLong
app.jwt.expiration=86400000

# File uploads (served from persistent disk)
file.upload.dir=./data/uploads

# Multipart upload limits for prod-h2
spring.servlet.multipart.max-file-size=2MB
spring.servlet.multipart.max-request-size=2MB

# HTTP response compression to reduce payload sizes over the network
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,text/css,application/javascript,application/x-javascript
server.compression.min-response-size=1024

# HikariCP (connection pool) tuning – safe defaults
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000

# Spring Cache (Caffeine)
spring.cache.type=caffeine
# Caffeine spec: max 1000 entries, expire 60s after write, record statistics
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=6h,recordStats

# Actuator endpoints for troubleshooting caches/metrics in prod-h2
management.endpoints.web.exposure.include=health,info,metrics,caches
# Updated actuator endpoint properties (Spring Boot 3.5): use 'access'
management.endpoint.caches.access=read-only
management.endpoint.metrics.access=read-only
management.endpoints.web.base-path=/api/actuator

# Mail configuration (SMTP) — Option B defaults (STARTTLS on 587)
# You can override any of these via environment variables in production.
spring.mail.host=${SPRING_MAIL_HOST:smtp.hostinger.com}
spring.mail.port=${SPRING_MAIL_PORT:587}
spring.mail.username=${SPRING_MAIL_USERNAME:}
spring.mail.password=${SPRING_MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
# STARTTLS mode enabled and required by default for port 587
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_SMTP_STARTTLS_ENABLE:true}
spring.mail.properties.mail.smtp.starttls.required=${SPRING_MAIL_SMTP_STARTTLS_REQUIRED:true}
# Explicitly disable implicit SSL (SMTPS) for port 587
spring.mail.properties.mail.smtp.ssl.enable=${SPRING_MAIL_SMTP_SSL_ENABLE:false}
# Force TLS protocol version used during STARTTLS handshake (some providers require TLSv1.2)
spring.mail.properties.mail.smtp.ssl.protocols=${SPRING_MAIL_SMTP_SSL_PROTOCOLS:TLSv1.2}
# Trust the SMTP server certificate (adjust host if your provider differs)
spring.mail.properties.mail.smtp.ssl.trust=${SPRING_MAIL_SMTP_SSL_TRUST:smtp.hostinger.com}
# Connection and IO timeouts (ms)
spring.mail.properties.mail.smtp.connectiontimeout=${SPRING_MAIL_SMTP_CONNECTION_TIMEOUT:5000}
spring.mail.properties.mail.smtp.timeout=${SPRING_MAIL_SMTP_READ_TIMEOUT:15000}
spring.mail.properties.mail.smtp.writetimeout=${SPRING_MAIL_SMTP_WRITE_TIMEOUT:15000}
# Optional: verbose mail session debug
spring.mail.properties.mail.debug=${SPRING_MAIL_DEBUG:false}
# Optional: fail fast at startup if SMTP unreachable (set to true for diagnostics)
spring.mail.test-connection=${SPRING_MAIL_TEST_CONNECTION:false}

# Default sender address for newsletters
app.mail.from=${APP_MAIL_FROM:bharat.prasad@utilityzone.in}
